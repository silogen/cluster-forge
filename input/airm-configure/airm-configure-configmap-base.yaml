---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configure-base
  namespace: default
data:

  cluster-nodes-cron.yaml: |

    apiVersion: batch/v1
    kind: CronJob
    metadata:
      name: cluster-nodes-dispatcher
      namespace: airm
    spec:
      concurrencyPolicy: Replace
      schedule: "0 * * * *"
      jobTemplate:
        spec:
          template:
            spec:
              restartPolicy: OnFailure
              containers:
              - name: airm-cluster-nodes-cron
                image: ghcr.io/silogen/airm-dispatcher:v2025.08-rc.8
                command: ["curl", "-X", "POST", "http://airm-dispatcher:80/v1/clusters/nodes"]
                resources:
                  requests:
                    memory: "100Mi"
                    cpu: "50m"
                  limits:
                    memory: "100Mi"

  deployment.yaml: |

    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: airm-dispatcher
      namespace: airm
    spec:
      selector:
        matchLabels:
          app: airm-dispatcher
      template:
        metadata:
          labels:
            app: airm-dispatcher
        spec:
          serviceAccountName: airm-dispatcher-sa
          containers:
          - name: airm-dispatcher
            image: ghcr.io/silogen/airm-dispatcher:v2025.08-rc.8
            imagePullPolicy: Always
            ports:
            - containerPort: 8080
            env:
            - name: RABBITMQ_HOST
              value: "rabbitmq.airm.svc.cluster.local"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_AIRM_COMMON_VHOST
              value: "vh_airm_common"
            - name: RABBITMQ_AIRM_COMMON_QUEUE
              value: "airm_common"
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: airm-rabbitmq-common-vhost-user
                  key: username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airm-rabbitmq-common-vhost-user
                  key: password
            livenessProbe:
              httpGet:
                path: /v1/health
                port: 8080
              initialDelaySeconds: 10
              periodSeconds: 5
              timeoutSeconds: 2
              failureThreshold: 3
              successThreshold: 1
            readinessProbe:
              httpGet:
                path: /v1/health
                port: 8080
              initialDelaySeconds: 10
              periodSeconds: 5
              timeoutSeconds: 2
              failureThreshold: 3
              successThreshold: 1
            resources:
              requests:
                memory: "1Gi"
                cpu: "500m"
              limits:
                memory: "1Gi"
            securityContext:
              runAsUser: 0

  heartbeat-cron.yaml: |

    apiVersion: batch/v1
    kind: CronJob
    metadata:
      name: heartbeat-dispatcher
      namespace: airm
    spec:
      concurrencyPolicy: Replace
      schedule: "*/1 * * * *"
      jobTemplate:
        spec:
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
            spec:
              restartPolicy: OnFailure
              containers:
              - name: airm-heartbeat-cron
                image: ghcr.io/silogen/airm-dispatcher:v2025.08-rc.8
                command: ["curl", "-X", "POST", "http://airm-dispatcher:80/v1/heartbeats"]
                resources:
                  requests:
                    memory: "100Mi"
                    cpu: "50m"
                  limits:
                    memory: "100Mi"

  kustomization.yaml: |

    apiVersion: kustomize.config.k8s.io/v1beta1
    kind: Kustomization
    namespace: airm
    resources:
    - namespace.yaml
    - deployment.yaml
    - service.yaml
    - role.yaml
    - role-binding.yaml
    - sa.yaml
    - heartbeat-cron.yaml
    - cluster-nodes-cron.yaml
    - external-secret.yaml


  external-secret.yaml: |

    $patch: delete
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: airm-rabbitmq-common-vhost-user
      namespace: airm

  namespace.yaml: |

    apiVersion: v1
    kind: Namespace
    metadata:
      name: airm
      labels:
        istio-injection: enabled
        monitoring: prometheus

  role-binding.yaml: |

    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: airm-dispatcher-cluster-access-binding
    subjects:
    - kind: ServiceAccount
      name: airm-dispatcher-sa
    roleRef:
      kind: ClusterRole
      name: airm-dispatcher-cluster-access-role
      apiGroup: rbac.authorization.k8s.io

  role.yaml: |

    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: airm-dispatcher-cluster-access-role
    rules:
    - apiGroups: [""]
      resources: ["services", "namespaces", "configmaps"]
      verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
    - apiGroups: [""]
      resources: ["nodes"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apps"]
      resources: ["deployments"]
      verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
    - apiGroups: ["batch"]
      resources: ["jobs"]
      verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
    - apiGroups: ["kaiwo.silogen.ai"]
      resources: ["kaiwojobs", "kaiwoservices", "kaiwoqueueconfigs"]
      verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
    - apiGroups: ["gateway.networking.k8s.io"]
      resources: ["httproutes"]
      verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
    - apiGroups: ["networking.k8s.io"]
      resources: ["ingresses"]
      verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]

  sa.yaml: |

    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: airm-dispatcher-sa
      namespace: airm

  service.yaml: |

    apiVersion: v1
    kind: Service
    metadata:
      name: airm-dispatcher
      namespace: airm
      labels:
        app: airm-dispatcher
    spec:
      ports:
      - name: web
        port: 80
        targetPort: 8080
      type: ClusterIP
      selector:
        app: airm-dispatcher
