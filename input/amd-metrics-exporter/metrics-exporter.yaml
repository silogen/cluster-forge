---
# Source: amdgpu-metrics-exporter-charts/templates/metrics-exporter-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: amdgpu-metrics-exporter
  labels:
    app.kubernetes.io/component: amd-gpu
    app.kubernetes.io/part-of: amd-gpu
    helm.sh/chart: amdgpu-metrics-exporter-charts-v1.0.0
    app.kubernetes.io/name: amdgpu-metrics-exporter-charts
    app.kubernetes.io/instance: metrics-exporter
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: amdgpu-metrics-exporter-charts/templates/metrics-exporter-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-exporter-amdgpu-metrics-exporter-charts-metrics-exporter
  labels:
    app.kubernetes.io/component: amd-gpu
    app.kubernetes.io/part-of: amd-gpu
    helm.sh/chart: amdgpu-metrics-exporter-charts-v1.0.0
    app.kubernetes.io/name: amdgpu-metrics-exporter-charts
    app.kubernetes.io/instance: metrics-exporter
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - watch
  - get
  - list
  - update
---
# Source: amdgpu-metrics-exporter-charts/templates/metrics-exporter-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metrics-exporter-amdgpu-metrics-exporter-charts-metrics-exporter
  labels:
    app.kubernetes.io/component: amd-gpu
    app.kubernetes.io/part-of: amd-gpu
    helm.sh/chart: amdgpu-metrics-exporter-charts-v1.0.0
    app.kubernetes.io/name: amdgpu-metrics-exporter-charts
    app.kubernetes.io/instance: metrics-exporter
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'metrics-exporter-amdgpu-metrics-exporter-charts-metrics-exporter'
subjects:
- kind: ServiceAccount
  name: amdgpu-metrics-exporter
  namespace: 'default'
---
# Source: amdgpu-metrics-exporter-charts/templates/metrics-exporter-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: metrics-exporter-amd-metrics-exporter-svc
spec:
  selector:
    app: metrics-exporter-amdgpu-metrics-exporter
  internalTrafficPolicy: Local
  type: ClusterIP
  ports:
    - protocol: "TCP"
      port: 5000
---
# Source: amdgpu-metrics-exporter-charts/templates/daemonsets.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: metrics-exporter-amdgpu-metrics-exporter
  labels:
    app: amdgpu-metrics-exporter
    helm.sh/chart: amdgpu-metrics-exporter-charts-v1.0.0
    app.kubernetes.io/name: amdgpu-metrics-exporter-charts
    app.kubernetes.io/instance: metrics-exporter
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: metrics-exporter-amdgpu-metrics-exporter
  template:
    metadata:
      labels:
        app: metrics-exporter-amdgpu-metrics-exporter
    spec:
      initContainers:
      - command:
        - sh
        - -c
        - while [ ! -d /host-sys/class/kfd ] || [ ! -d /host-sys/module/amdgpu/drivers/
          ]; do echo "amdgpu driver is not loaded "; sleep 2 ;done
        image: busybox:1.36
        imagePullPolicy: IfNotPresent
        name: driver-init
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /host-sys
          name: sys-volume
      containers:
        - name: amdgpu-metrics-exporter-container
          image: "registry.test.pensando.io:5000/device-metrics-exporter/exporter:latest"
          imagePullPolicy: Always
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: METRICS_EXPORTER_PORT
            value: "5000"
          ports:
            - containerPort: 5000
              protocol: TCP
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /dev
            name: dev-volume
          - mountPath: /sys
            name: sys-volume
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          workingDir: /root
      volumes:
      - hostPath:
          path: /dev
          type: Directory
        name: dev-volume
      - hostPath:
          path: /sys
          type: Directory
        name: sys-volume
      - hostPath:
          path: /var/lib/kubelet/pod-resources
          type: Directory
        name: pod-resources
