apiVersion: batch/v1
kind: Job
metadata:
  name: app-domain-updater
  namespace: default
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: domain-updater
        image: alpine:latest
        env:
        - name: FILE_PATH
          value: "/"
        - name: COMMIT_MESSAGE
          value: "updated domain references"
        - name: NEW_DOMAIN_NAME
          valueFrom:
            configMapKeyRef:
              name: bloom
              key: DOMAIN
        volumeMounts:
        - name: workspace
          mountPath: /workspace
        command: ["/bin/sh"]
        args:
        - -c
        - |
          set -e
          sed -i 's|https://dl-cdn.alpinelinux.org|http://dl-cdn.alpinelinux.org|' /etc/apk/repositories
          apk update
          # Install git, yq, and grep
          apk add --no-cache git yq grep
          
          # Configure git
          git config --global user.name "K8s Domain Updater"
          git config --global user.email "gateway-updater@cluster.local"
          
          # Clone repository with credentials in URL
          cd /workspace
          echo "Cloning repository: clusterforge"
          git clone http://forge:clusterforge@gitea-http.cf-gitea.svc.cluster.local:3000/forge/clusterforge.git repo
          cd repo
          
          # Search for files containing 'not-a-domain'
          echo "Searching for files containing 'not-a-domain'..."
          FILES_WITH_NOT_A_DOMAIN=$(grep -r -l "not-a-domain" . || true)
          
          if [ -z "$FILES_WITH_NOT_A_DOMAIN" ]; then
            echo "No files found containing 'not-a-domain'"
            exit 0
          fi
          
          echo "Found files containing 'not-a-domain':"
          echo "$FILES_WITH_NOT_A_DOMAIN"
          
          # Replace 'not-a-domain' with the domain from configmap
          echo "Replacing 'not-a-domain' with: $NEW_DOMAIN_NAME"
          for file in $FILES_WITH_NOT_A_DOMAIN; do
            echo "Processing file: $file"
            sed -i "s/not-a-domain/$NEW_DOMAIN_NAME/g" "$file"
            echo "Updated: $file"
          done
          
          # Check if there are changes
          if git diff --quiet; then
            echo "No changes detected - domain might already be updated"
            exit 0
          fi
          
          # Stage, commit and push changes
          git pull
          git add .
          git commit -m "$COMMIT_MESSAGE: Replaced 'not-a-domain' with $NEW_DOMAIN_NAME"
          
          # Set the remote URL with credentials for pushing
          git remote set-url origin http://forge:clusterforge@gitea-http.cf-gitea.svc.cluster.local:3000/forge/clusterforge.git
          git push origin master
          
          echo "Successfully replaced 'not-a-domain' with $NEW_DOMAIN_NAME and pushed to master"
      volumes:
      - name: workspace
        emptyDir: {}