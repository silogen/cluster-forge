testFramework:
  enabled: false
persistence:
  type: pvc
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  finalizers: []

grafana.ini:
#  users:
#    allow_sign_up: false
#    allow_org_create: false
#    auto_assign_org: true
#    auto_assign_org_id: 1
#    auto_assign_org_role: Viewer
#    viewers_can_edit: true
  auth.anonymous:
    enabled: true
    org_role: Viewer
#  auth:
#    disable_login_form: false
#  auth.proxy:
#    enabled: true
#    header_name: Tailscale-User-Name
#    header_property: username
#    auto_sign_up: true
  date_formats:
    default_timezone: UTC
  server:
    root_url: https://localhost
  security: ##
    allow_embedding: true

service:
  port: 3000
admin:
  existingSecret: "grafana-user-credentials"
  userKey: grafana-admin-id
  passwordKey: grafana-admin-pw

deploymentStrategy:
  type: Recreate

envValueFrom:
  SLACK_CONTACT_POINT_TEST_URL:
    secretKeyRef:
      name: grafana-alertmanager-creds
      key: slack_contact_point_test_url
  LOKI_TENANT_PASSWORD:
    secretKeyRef:
      name: grafana-loki-creds
      key: loki_tenant_password_ociclusters
  MIMIR_BASIC_AUTH_PASSWORD:
    secretKeyRef:
      name: grafana-mimir-creds
      key: mimir_basic_auth_password


datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: oci-clusters-loki
      type: loki
      url: http://loki-gateway.grafana-loki.svc.cluster.local:80
      orgId: 1
      uid: oci-clusters-loki
      basicAuth: true
      basicAuthUser: loki_tenant_oci
      secureJsonData:
        basicAuthPassword: ${LOKI_TENANT_PASSWORD}
#        httpHeaderValue1: 'loki-tenant-oci1' ## <-- This may be not needed for loki
#      jsonData:
#        httpHeaderName1: 'X-Scope-OrgID' ## <-- This may be not needed for loki
    - name: oci-clusters-mimir
      type: prometheus
      url: http://mimir-gateway.grafana-mimir.svc:8080/prometheus
      orgId: 1
      uid: oci-clusters-mimir
      basicAuth: true
      basicAuthUser: cluster-forge-mimir-test-user
      secureJsonData:
        basicAuthPassword: ${MIMIR_BASIC_AUTH_PASSWORD} ## <--
        httpHeaderValue1: 'oci-clusters'
      jsonData:
        httpHeaderName1: 'X-Scope-OrgID'
#dashboardProviders:
#  dashboardproviders.yaml:
#    apiVersion: 1
#    providers:
#    - name: 'default'
#      orgId: 1
#      folder: ''
#      type: file
#      disableDeletion: false
#      editable: true
#      updateIntervalSeconds: 10
#      allowUiUpdates: true
#      options:
#        path: /var/lib/grafana/dashboards/default

sidecar:
  dashboards:
    enabled: true
    label: grafana_dashboard
    folderAnnotation: grafana_folder
    provider:
      foldersFromFilesStructure: true
  alerts:
    enabled: true
    label: grafana_alerting

extraObjects:
  - apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: grafana-user-credentials
      namespace: grafana
    spec:
      refreshInterval: "0"
      secretStoreRef:
        name: k8s-secret-store
        kind: ClusterSecretStore
      target:
        name: grafana-user-credentials 
      data:
        - secretKey: grafana-admin-id
          remoteRef:
            key: grafana-creds
            property: grafana-admin-id
        - secretKey: grafana-admin-pw
          remoteRef:
            key: grafana-creds
            property: grafana-admin-pw

  - apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: grafana-loki-creds
      namespace: grafana
    spec:
      refreshInterval: "0"
      secretStoreRef:
        name: k8s-secret-store
        kind: ClusterSecretStore
      target:
        name: grafana-loki-creds
      data:
        - secretKey: loki_tenant_name_oci
          remoteRef:
            key: grafana-loki-creds
            property: loki_tenant_name_oci
        - secretKey: loki_tenant_password_ociclusters
          remoteRef:
            key: grafana-loki-creds
            property: loki_tenant_password_ociclusters

  - apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: grafana-mimir-creds
      namespace: grafana
    spec:
      refreshInterval: "0"
      secretStoreRef:
        name: k8s-secret-store
        kind: ClusterSecretStore
      target:
        name: grafana-mimir-creds
      data:
        - secretKey: mimir_basic_auth_password
          remoteRef:
            key: grafana-mimir-creds
            property: mimir_basic_auth_password

  - apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: grafana-alertmanager-creds
      namespace: grafana
    spec:
      refreshInterval: "0"
      secretStoreRef:
        name: k8s-secret-store
        kind: ClusterSecretStore
      target:
        name: grafana-alertmanager-creds
      data:
        - secretKey: slack_contact_point_test_url
          remoteRef:
            key: grafana-creds
            property: alertmanager_contact_point_url
