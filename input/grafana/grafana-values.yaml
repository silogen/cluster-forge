testFramework:
  enabled: false
persistence:
  type: pvc
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  finalizers: []

grafana.ini:
#  users:
#    allow_sign_up: false
#    allow_org_create: false
#    auto_assign_org: true
#    auto_assign_org_id: 1
#    auto_assign_org_role: Viewer
#    viewers_can_edit: true
  auth.anonymous:
    enabled: true
    org_role: Viewer
#  auth:
#    disable_login_form: false
#  auth.proxy:
#    enabled: true
#    header_name: Tailscale-User-Name
#    header_property: username
#    auto_sign_up: true
  date_formats:
    default_timezone: UTC
  server:
    root_url: https://localhost
  security: ##
    allow_embedding: true

service:
  port: 3000
admin:
  existingSecret: "grafana-user-credentials" ###
  userKey: grafana-admin-id ###
  passwordKey: grafana-admin-pw ###

deploymentStrategy:
  type: Recreate

#envValueFrom:
#  TENANT_PW_DEV:
#    secretKeyRef:
#      name: grafana-user-credentials ###
#      key: tenant-pw-dev
#  MIMIR_PASSWORD:
#    secretKeyRef:
#      name: grafana-user-credentials ###
#      key: mimir-basic-password

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: oci1-loki ##
      type: loki
      url: http://loki-gateway.grafana-loki.svc.cluster.local:80
      orgId: 1
      uid: oci1-loki ##
      basicAuth: true
      basicAuthUser: loki_tenant_demo
      secureJsonData:
        basicAuthPassword: loki-tenant-demo-password
        httpHeaderValue1: 'loki-tenant-oci1' ##
      jsonData:
        httpHeaderName1: 'X-Scope-OrgID'
    - name: oci1-mimir ##
      type: prometheus
      url: http://mimir-gateway.grafana-mimir.svc:8080/prometheus
      orgId: 1
      uid: oci1-mimir ##
      basicAuth: true
      basicAuthUser: cluster-forge-mimir-test-user
      secureJsonData:
        basicAuthPassword:  cluster-forge-mimir-test-pass
        httpHeaderValue1: 'mimir-tenant-oci1' ##
      jsonData:
        httpHeaderName1: 'X-Scope-OrgID'
    - name: oci2-loki ##
      type: loki
      url: http://loki-gateway.grafana-loki.svc.cluster.local:80
      orgId: 1
      uid: oci2-loki ##
      basicAuth: true
      basicAuthUser: loki_tenant_demo
      secureJsonData:
        basicAuthPassword: loki-tenant-demo-password
        httpHeaderValue1: 'loki-tenant-oci2' ##
      jsonData:
        httpHeaderName1: 'X-Scope-OrgID'
    - name: oci2-mimir ##
      type: prometheus
      url: http://mimir-gateway.grafana-mimir.svc:8080/prometheus
      orgId: 1
      uid: oci2-mimir ##
      basicAuth: true
      basicAuthUser: cluster-forge-mimir-test-user
      secureJsonData:
        basicAuthPassword:  cluster-forge-mimir-test-pass
        httpHeaderValue1: 'mimir-tenant-oci2' ##
      jsonData:
        httpHeaderName1: 'X-Scope-OrgID'
    - name: ocisilogen-loki ##
      type: loki
      url: http://loki-gateway.grafana-loki.svc.cluster.local:80
      orgId: 1
      uid: ocisilogen-loki ##
      basicAuth: true
      basicAuthUser: loki_tenant_demo
      secureJsonData:
        basicAuthPassword: loki-tenant-demo-password
        httpHeaderValue1: 'loki-tenant-ocisilogen' ##
      jsonData:
        httpHeaderName1: 'X-Scope-OrgID'
    - name: ocisilogen-mimir ##
      type: prometheus
      url: http://mimir-gateway.grafana-mimir.svc:8080/prometheus
      orgId: 1
      uid: ocisilogen-mimir ##
      basicAuth: true
      basicAuthUser: cluster-forge-mimir-test-user
      secureJsonData:
        basicAuthPassword:  cluster-forge-mimir-test-pass
        httpHeaderValue1: 'mimir-tenant-ocisilgoen' ##
      jsonData:
        httpHeaderName1: 'X-Scope-OrgID'
    - name: ociops-loki ##
      type: loki
      url: http://loki-gateway.grafana-loki.svc.cluster.local:80
      orgId: 1
      uid: ociops-loki ##
      basicAuth: true
      basicAuthUser: loki_tenant_demo
      secureJsonData:
        basicAuthPassword: loki-tenant-demo-password
        httpHeaderValue1: 'loki-tenant-ociops' ##
      jsonData:
        httpHeaderName1: 'X-Scope-OrgID'
    - name: ociops-mimir ##
      type: prometheus
      url: http://mimir-gateway.grafana-mimir.svc:8080/prometheus
      orgId: 1
      uid: ociops-mimir ##
      basicAuth: true
      basicAuthUser: cluster-forge-mimir-test-user
      secureJsonData:
        basicAuthPassword:  cluster-forge-mimir-test-pass
        httpHeaderValue1: 'mimir-tenant-ociops' ##
      jsonData:
        httpHeaderName1: 'X-Scope-OrgID'
#dashboardProviders:
#  dashboardproviders.yaml:
#    apiVersion: 1
#    providers:
#    - name: 'default'
#      orgId: 1
#      folder: ''
#      type: file
#      disableDeletion: false
#      editable: true
#      updateIntervalSeconds: 10
#      allowUiUpdates: true
#      options:
#        path: /var/lib/grafana/dashboards/default

sidecar:
  dashboards:
    enabled: true
    label: grafana_dashboard
    folderAnnotation: grafana_folder
    provider:
      foldersFromFilesStructure: true

extraObjects: ###
  - apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: grafana-user-credentials
      namespace: grafana
    spec:
      refreshInterval: "30m"
      secretStoreRef:
        name: fake-secret-store
        kind: ClusterSecretStore
      target:
        name: grafana-user-credentials 
      data:
        - secretKey: grafana-admin-id
          remoteRef:
            key: grafana-admin-id 
            version: v1
        - secretKey: grafana-admin-pw 
          remoteRef:
            key: grafana-admin-pw
            version: v1
