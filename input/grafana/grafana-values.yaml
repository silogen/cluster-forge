testFramework:
  enabled: false
persistence:
  type: pvc
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  finalizers: []

grafana.ini:
#  users:
#    allow_sign_up: false
#    allow_org_create: false
#    auto_assign_org: true
#    auto_assign_org_id: 1
#    auto_assign_org_role: Viewer
#    viewers_can_edit: true
#  auth.anonymous:
#    enabled: false
#    org_role: Viewer
#  auth:
#    disable_login_form: false
#  auth.proxy:
#    enabled: true
#    header_name: Tailscale-User-Name
#    header_property: username
#    auto_sign_up: true
  date_formats:
    default_timezone: UTC
  server:
    root_url: https://localhost

service:
  port: 3000
admin:
  existingSecret: "grafana-user-credentials" ###
  userKey: grafana-admin-id
  passwordKey: grafana-admin-pw

deploymentStrategy:
  type: Recreate

#envValueFrom:
#  TENANT_PW_DEV:
#    secretKeyRef:
#      name: grafana-user-credentials ###
#      key: tenant-pw-dev
#  MIMIR_PASSWORD:
#    secretKeyRef:
#      name: grafana-user-credentials ###
#      key: mimir-basic-password

#datasources:
#  datasources.yaml:
#    apiVersion: 1
#    datasources:
#    # DEV ###
#    - name: Loki_for_Dev ###
#      type: loki
#      url: http://loki-gateway.monitoring-services-log.svc:80 ###
#      orgId: 1
#      uid: loki_for_logs
#      basicAuth: true
#      basicAuthUser: loki-dev-tenant
#      secureJsonData:
#        basicAuthPassword: ${TENANT_PW_DEV} ###
#    - name: Tempo_for_Dev ###
#      type: tempo
#      url: http://grafana-tempo-query-frontend.monitoring-services-trace.svc:3100 ###
#      orgId: 1
#      uid: tempo_for_traces
#      jsonData:
#        httpHeaderName1: 'X-Scope-OrgID'
#        serviceMap:
#          datasourceUid: 'mimir_service_graphs'
#        nodeGraph:
#          enabled: true
#      secureJsonData:
#        httpHeaderValue1: 'tempo-tenant-dev' ###
#    - name: Mimir_for_Dev ###
#      type: prometheus
#      url: http://grafana-mimir-gateway.monitoring-services-metric.svc:8080/prometheus ###
#      orgId: 1
#      uid: mimir_for_metrics
#      isDefault: true
#      basicAuth: true
#      basicAuthUser: mimir-user
#      secureJsonData:
#        basicAuthPassword: ${MIMIR_PASSWORD} ###
#        httpHeaderValue1: 'mimir-tenant-dev' ###
#      jsonData:
#        httpHeaderName1: 'X-Scope-OrgID'
#    - name: Mimir_for_Service_Graph ###
#      type: prometheus
#      url: http://grafana-mimir-gateway.monitoring-services-metric.svc:8080/prometheus
#      orgId: 1
#      uid: mimir_service_graphs
#      basicAuth: true
#      basicAuthUser: mimir-user
#      secureJsonData:
#        basicAuthPassword: ${MIMIR_PASSWORD}
#        httpHeaderValue1: 'tempo-tenant-dev'
#      jsonData:
#        httpHeaderName1: 'X-Scope-OrgID'
##Omni Devenv
#    - name: Loki_Omni_DevEnv ###
#      type: loki
#      url: http://loki-gateway.monitoring-services-log.svc:80
#      orgId: 1
#      uid: loki_omni_devenv_logs
#      basicAuth: true
#      basicAuthUser: loki-omni-devenv-tenant ##
#      secureJsonData:
#        basicAuthPassword: ${LOKI_TENANT_PW_OMNI_DEVENV} ##
#    - name: Mimir_Omni_DevEnv
#      type: prometheus
#      url: http://grafana-mimir-gateway.monitoring-services-metric.svc:8080/prometheus
#      orgId: 1
#      uid: mimir_omni_devenv_metrics
#      isDefault: false
#      basicAuth: true
#      basicAuthUser: mimir-user
#      secureJsonData:
#        basicAuthPassword: ${MIMIR_PASSWORD}
#        httpHeaderValue1: 'omni-devenv' ##
#      jsonData:
#        httpHeaderName1: 'X-Scope-OrgID'

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: true
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards/default

#sidecar:
#  dashboards:
#    enabled: true
#    label: grafana_dashboard
#    folderAnnotation: grafana_folder
#    provider:
#      foldersFromFilesStructure: true
