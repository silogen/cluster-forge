apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: require-requests-limits
  annotations:
    policies.kyverno.io/title: Require Limits and Requests
    policies.kyverno.io/category: Best Practices, EKS Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      As application workloads share cluster resources, it is important to limit resources
      requested and consumed by each Pod. It is recommended to require resource requests and
      limits per Pod, especially for memory and CPU. If a Namespace level request or limit is specified,
      defaults will automatically be applied to each Pod based on the LimitRange configuration.
      This policy validates that all containers have something specified for memory and CPU
      requests and memory limits.
spec:
  validationFailureAction: Enforce
  background: true
  rules:
  - name: validate-resources
    match:
      any:
      - resources:
          kinds:
          - Pod
          operations:
          - CREATE
          - UPDATE
    exclude:
        any:
        - resources:
            namespaces:
            - argocd
            - cf-gitea
            - kube-amd-gpu  
            - longhorn
            - minio-operator
            - external-secrets
            - kgateway-system
            - kueue-system
            - metallb-system
            - minio-tenant-default
            - cert-manager
            - kuberay-operator
            - otel-lgtm-stack
    validate:
      message: "Memory resource limits and CPU and memory resource requests are required."
      foreach:
        - list: "request.object.spec.containers"
          pattern:
            resources:
              requests:
                memory: "?*"
                cpu: "?*"
              limits:
                memory: "?*"
          preconditions:
                all:
                  - key: "{{ element.image }}"
                    operator: NotEquals
                    value: "docker.io/istio*"
                  - key: "{{ element.image }}"
                    operator: NotEquals
                    value: "docker.io/semitechnologies*"
                  - key: "{{ element.image }}"
                    operator: NotEquals
                    value: "docker.io/liquibase*"
                  - key: "{{ element.image }}"
                    operator: NotEquals
                    value: "percona/*"
                  - key: "{{ element.image }}"
                    operator: NotEquals
                    value: "rabbitmq*"
                  - key: "{{ element.image }}"
                    operator: NotEquals
                    value: "ghcr.io/cloudnative-pg*"
                  - key: "{{ element.image }}"
                    operator: NotEquals
                    value: "gcr.io/knative-releases*"
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-emptydir-sizelimit
  annotations:
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/title: Add emptyDir sizeLimit
    policies.kyverno.io/category: Other
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kyverno-version: 1.7.3,1.8.0-rc2
    kyverno.io/kubernetes-version: "1.24"
    policies.kyverno.io/description: >-
      When a Pod requests an emptyDir, by default it does not have a size limit which
      may allow it to consume excess or all of the space in the medium backing the volume.
      This can quickly overrun a Node and may result in a denial of service for other
      workloads. This policy adds a sizeLimit field to all Pods mounting emptyDir
      volumes, if not present, and sets it to 100Mi.
spec:
  rules:
  - name: mutate-emptydir
    match:
      any:
      - resources:
          kinds:
          - Pod
    mutate:
      foreach:
      - list: "request.object.spec.volumes[]"
        preconditions:
          all:
          - key: "{{element.keys(@)}}"
            operator: AnyIn
            value: emptyDir
          - key: "{{element.emptyDir.sizeLimit || ''}}"
            operator: Equals
            value: ''
        patchesJson6902: |-
          - path: "/spec/volumes/{{elementIndex}}/emptyDir/sizeLimit"
            op: add
            value: 100Mi
