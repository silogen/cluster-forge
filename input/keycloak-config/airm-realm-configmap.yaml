apiVersion: v1
data:
  airm-realm.json: |
    {
      "id": "ab3ca5f2-5d40-4b8d-b3fb-2aa54990c981",
      "realm": "airm",
      "displayName": "",
      "displayNameHtml": "",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": true,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": true,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxTemporaryLockouts": 0,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "987e9259-4e48-4d77-a31f-5a9f5bba7d8d",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "ab3ca5f2-5d40-4b8d-b3fb-2aa54990c981",
            "attributes": {}
          },
          {
            "id": "62f72e0a-addb-48f1-8494-9667c304c8b4",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "ab3ca5f2-5d40-4b8d-b3fb-2aa54990c981",
            "attributes": {}
          },
          {
            "id": "3d56d105-250d-4f4d-8e0f-79629cfc6188",
            "name": "Platform Administrator",
            "description": "Role provided to customers which allows users in this role to view and manage resources of the organization",
            "composite": false,
            "clientRole": false,
            "containerId": "ab3ca5f2-5d40-4b8d-b3fb-2aa54990c981",
            "attributes": {}
          },
          {
            "id": "5642a7a3-f521-4b15-9e61-26289a1f1dbc",
            "name": "Super Administrator",
            "description": "Role which allows users to create new organizations",
            "composite": false,
            "clientRole": false,
            "containerId": "ab3ca5f2-5d40-4b8d-b3fb-2aa54990c981",
            "attributes": {}
          },
          {
            "id": "f527862a-af68-4191-986a-cbcb25f15c24",
            "name": "default-roles-airm",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ],
              "client": {
                "account": [
                  "manage-account",
                  "view-profile"
                ]
              }
            },
            "clientRole": false,
            "containerId": "ab3ca5f2-5d40-4b8d-b3fb-2aa54990c981",
            "attributes": {}
          }
        ],
        "client": {
          "admin-client-id-value": [],
          "354a0fa1-35ac-4a6d-9c4d-d661129c2cd0": [],
          "realm-management": [
            {
              "id": "daf01e8f-e5d7-4725-bcf9-4ebe4db2c195",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "04e8a760-fdc4-4d4e-a155-5c41d8b843fd",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "d7398231-fca8-4e18-935b-a029997ee73e",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "dffcd666-0524-4973-89e5-f07e1b7c2e1e",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "0f213eca-e78f-445d-a82e-6abf8d3574bb",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "261ec1c3-1536-4f7f-bd45-f738f4699101",
              "name": "uma_protection",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "1d2e4dce-8d3f-4968-a757-297786a07f9a",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "90a5f960-3171-4781-9d12-c89115a40c64",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "9af77566-a556-426a-b453-392a62506ddb",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "907cd61b-354f-44cc-be94-ba0374aaab09",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "f572834e-067c-4dc0-bb82-6b5670755a7c",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "2e1bf455-81ae-4cb1-b100-8dd222886dc3",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "446f9ca7-1cd7-4b99-ac43-0f002d48d05d",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "741fb7db-5308-4fbd-b84d-bff178559d56",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "view-realm",
                    "query-users",
                    "manage-realm",
                    "manage-users",
                    "create-client",
                    "view-authorization",
                    "impersonation",
                    "manage-identity-providers",
                    "view-clients",
                    "manage-authorization",
                    "query-realms",
                    "view-events",
                    "query-groups",
                    "manage-events",
                    "manage-clients",
                    "view-identity-providers",
                    "query-clients",
                    "view-users"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "29ffc819-6a48-4173-ad77-1b63e225b9fc",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "e30cf339-4d8d-481a-b3e6-46eb19102ec3",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "474176ec-af14-4312-984e-297ede4b0099",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "8745c5b4-da75-4093-9dd5-eb1926656a14",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "29e0b623-d7e2-4200-8efa-76a771109b8b",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            },
            {
              "id": "bac4f9fa-5524-4b54-a414-f420308c010b",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-users",
                    "query-groups"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "__AIRM_ADMIN_CLIENT_ID__": [],
          "admin-cli": [],
          "k8s": [],
          "minio": [],
          "ci-service-account": [],
          "account-console": [],
          "broker": [
            {
              "id": "2528a02a-ae30-4c2f-b238-ce5c5abe44a4",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "f8ce533a-7ebc-431b-89f5-28f386164ccf",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "6ec587dc-6f20-498d-9118-8a1819333087",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "4829f38b-ed60-40d2-ad3d-b71c6406433d",
              "attributes": {}
            },
            {
              "id": "7bc97572-779f-472c-be93-90c2d3894d24",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "4829f38b-ed60-40d2-ad3d-b71c6406433d",
              "attributes": {}
            },
            {
              "id": "4f82250f-a315-49c2-9733-410622c36c17",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "4829f38b-ed60-40d2-ad3d-b71c6406433d",
              "attributes": {}
            },
            {
              "id": "cb9e1581-c420-4feb-ac3f-51f04bbc80f9",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "view-consent"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "4829f38b-ed60-40d2-ad3d-b71c6406433d",
              "attributes": {}
            },
            {
              "id": "386612c8-9db2-48b4-ba03-1d4eb22a6f81",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "4829f38b-ed60-40d2-ad3d-b71c6406433d",
              "attributes": {}
            },
            {
              "id": "90d55c8c-db9e-4148-940c-efb29cb20da3",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "4829f38b-ed60-40d2-ad3d-b71c6406433d",
              "attributes": {}
            },
            {
              "id": "b5c10e58-5618-43c6-8f11-0a144f67a4c7",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "4829f38b-ed60-40d2-ad3d-b71c6406433d",
              "attributes": {}
            },
            {
              "id": "c27c99ef-6d2f-455f-ab44-ce17a1267a80",
              "name": "view-groups",
              "description": "${role_view-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "4829f38b-ed60-40d2-ad3d-b71c6406433d",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [
        {
          "id": "edbe36d4-aea0-4ff3-a8db-a3c9843e8a46",
          "name": "minio-users",
          "path": "/minio-users",
          "subGroups": [],
          "attributes": {
            "policy": [
              "readwrite"
            ]
          },
          "realmRoles": [],
          "clientRoles": {}
        }
      ],
      "defaultRole": {
        "id": "f527862a-af68-4191-986a-cbcb25f15c24",
        "name": "default-roles-airm",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "ab3ca5f2-5d40-4b8d-b3fb-2aa54990c981"
      },
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
      ],
      "localizationTexts": {},
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256",
        "RS256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyExtraOrigins": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256",
        "RS256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessExtraOrigins": [],
      "users": [
        {
          "id": "393cb680-d521-4c02-839d-7366076398d1",
          "username": "service-account-__AIRM_ADMIN_CLIENT_ID__",
          "emailVerified": false,
          "createdTimestamp": 1737315816555,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "__AIRM_ADMIN_CLIENT_ID__",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-airm"
          ],
          "clientRoles": {
            "realm-management": [
              "realm-admin"
            ]
          },
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "487590ed-165c-44d5-b686-1aff81cca298",
          "username": "devuser@not-a-domain",
          "firstName": "Dev Env",
          "lastName": "User",
          "email": "devuser@not-a-domain",
          "emailVerified": true,
          "createdTimestamp": 1746628462894,
          "enabled": true,
          "totp": false,
          "credentials": [
            {
              "id": "596f57d5-41d0-4dd8-bd6f-bb16db235be2",
              "type": "password",
              "userLabel": "My password",
              "createdDate": 1746628471958,
              "secretData": "{\"value\":\"15oUl8X/o/maH7BWBI4mGDj7WFXPXSc+BbPsIBTcqHE=\",\"salt\":\"RDnI5bojai0rUPa5j7T1rQ==\",\"additionalParameters\":{}}",
              "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
            }
          ],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-airm",
            "Platform Administrator",
            "Super Administrator"
          ],
          "notBefore": 0,
          "groups": [
              "/minio-users"
          ]
        },
        {
          "id": "b2cbd302-17bf-4865-9591-96845376dc7b",
          "username": "service-account-minio",
          "emailVerified": false,
          "createdTimestamp": 1756901765452,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "minio",
          "credentials": [],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-airm"
          ],
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "e5714500-2153-4c0e-9f2e-b9d4681f33c5",
          "username": "service-account-ci-service-account",
          "emailVerified": false,
          "createdTimestamp": 1759383882000,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "ci-service-account",
          "credentials": [],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-airm"
          ],
          "notBefore": 0,
          "groups": []
        }
      ],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account",
              "view-groups"
            ]
          }
        ]
      },
      "clients": [
        {
          "id": "157574c2-61bc-4f7b-acd6-dfb1672c4871",
          "clientId": "k8s",
          "name": "",
          "description": "used for kubeconfig tokens",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "__K8S_CLIENT_SECRET__",
          "redirectUris": [
            "http://*",
            "https://*"
          ],
          "webOrigins": [
            "http://*",
            "https://*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1758657646",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "6ae1a58c-6f31-49ba-9271-cd00e1f86708",
              "name": "airm-role-to-group",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "usermodel.realmRoleMapping.rolePrefix": "airm-role:",
                "introspection.token.claim": "true",
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "lightweight.claim": "false",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "groups",
            "basic",
            "email",
            "policy"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "9f46dcf2-2d4a-434e-bec6-718bdb300367",
          "clientId": "__AIRM_ADMIN_CLIENT_ID__",
          "name": "AIRM Admin API Client",
          "description": "Client to access the Admin API via Python client. Not to be shared externally and not to be used for user authentication",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "__AIRM_ADMIN_CLIENT_SECRET__",
          "redirectUris": [
            "https://not-a-domain/*",
            "https://airmui.not-a-domain/*",
            "https://*.not-a-domain/*"
          ],
          "webOrigins": [
            "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1737315816",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "use.jwks.url": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "7d4f51d3-ea0b-4d5e-9afa-52182100b97d",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            },
            {
              "id": "6e5f4017-6554-48b4-928c-8c820c92c2e6",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "id": "53b4649a-0aef-479f-a6dd-f9a3b169c970",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "ceeab688-00ab-4d0f-b0e2-0b5b0f1facbe",
          "clientId": "354a0fa1-35ac-4a6d-9c4d-d661129c2cd0",
          "name": "AIRM UI Client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "__AIRM_FRONTEND_CLIENT_SECRET__",
          "redirectUris": [
            "https://not-a-domain/*",
            "https://airmui.not-a-domain/*"
          ],
          "webOrigins": [
            "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1737564832",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "organization",
            "profile",
            "basic",
            "email",
            "groups"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "4829f38b-ed60-40d2-ad3d-b71c6406433d",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/airm/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/airm/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "d4eeae5e-578f-43cc-9759-b4cc7f10e7bd",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/airm/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/airm/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "e16c13e4-dd66-4a2b-b740-cdfd73e1ca6b",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "64f7bd64-cf2b-4e43-9b41-8b5045da884a",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "client.use.lightweight.access.token.enabled": "true",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "f8ce533a-7ebc-431b-89f5-28f386164ccf",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "true",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "efb12ee0-a2dc-4c7a-a032-74ce4730c425",
          "clientId": "minio",
          "name": "",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "__MINIO_KEYCLOAK_CLIENT_SECRET__",
          "redirectUris": [
            "",
            "https://minio.not-a-domain/*"
          ],
          "webOrigins": [
              "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1756901765",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "aa7debbf-865b-4ead-b990-7e23304f7a46",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            },
            {
              "id": "74d68184-fe7f-40a7-a7ed-b0e8cb8bdcc5",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
                }
              },
              {
                "id": "1539a7f8-a01a-4d37-8815-98ee03396d8c",
                "name": "Client Host",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "clientHost",
                  "id.token.claim": "true",
                  "introspection.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "clientHost",
                  "jsonType.label": "String"
                }
              }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "groups",
            "basic",
            "email",
            "policy"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "b640a3e3-0a9c-45a1-a737-cac9ce665c4f",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "authorizationServicesEnabled": true,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "true",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ],
          "authorizationSettings": {
            "allowRemoteResourceManagement": false,
            "policyEnforcementMode": "ENFORCING",
            "resources": [],
            "policies": [],
            "scopes": [
              {
                "name": "manage"
              },
              {
                "name": "view"
              },
              {
                "name": "map-roles"
              },
              {
                "name": "impersonate"
              },
              {
                "name": "user-impersonated"
              },
              {
                "name": "manage-group-membership"
              },
              {
                "name": "map-role"
              },
              {
                "name": "map-role-client-scope"
              },
              {
                "name": "map-role-composite"
              }
            ],
            "decisionStrategy": "UNANIMOUS"
          }
        },
        {
          "id": "185c5af6-9b04-4463-83db-2923dfc75b72",
          "clientId": "ci-service-account",
          "name": "CI Service Account",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "__AIRM_CI_CLIENT_SECRET__",
          "redirectUris": [
            "/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1759383882",
            "backchannel.logout.session.required": "true",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "8cbf3b39-4ba0-4353-84f4-80ffeac6eee3",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "id": "7dda77a1-17cd-4969-b093-2ce396ac8ebd",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            },
            {
              "id": "69603ff4-0252-4cc5-9c6d-b2f1357e5931",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "organization",
            "profile",
            "groups",
            "basic",
            "email",
            "policy"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "2bb550ef-6d62-4c4a-ad46-bbaeb2e32ab8",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/airm/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/admin/airm/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "client.use.lightweight.access.token.enabled": "true",
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "46d2a736-94d8-47aa-9dd8-24928d280cf0",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "b4e1ad1d-a228-4ee7-a018-eee8ce810b7a",
          "name": "basic",
          "description": "OpenID Connect scope for add all basic claims to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "7e6ce3ee-09d5-4f70-a49e-ca7808a8398a",
              "name": "sub",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-sub-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            },
            {
              "id": "f53819b8-d10f-40cd-aa2b-530daf0b201b",
              "name": "auth_time",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "AUTH_TIME",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "auth_time",
                "jsonType.label": "long"
              }
            }
          ]
        },
        {
          "id": "e471159a-ec37-45aa-a499-10c0f0cf7ce8",
          "name": "organization",
          "description": "Additional claims about the organization a subject belongs to",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${organizationScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "aeff3505-4990-4ac2-8a0d-8c407ba2d50e",
              "name": "organization",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-organization-membership-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "organization",
                "jsonType.label": "JSON",
                "addOrganizationId": "true"
              }
            }
          ]
        },
        {
          "id": "ca910203-028f-426e-b8bd-44881302e47b",
          "name": "groups",
          "description": "User group memberships",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "c44766cf-7ee5-484d-b147-ef112f0cf573",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-group-membership-mapper",
              "consentRequired": false,
              "config": {
                "full.path": "false",
                "introspection.token.claim": "true",
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "lightweight.claim": "false",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id" : "dfce246f-f69b-4a33-82cf-f222bffabaf8",
          "name" : "policy",
          "description" : "",
          "protocol" : "openid-connect",
          "attributes" : {
            "include.in.token.scope" : "true",
            "display.on.consent.screen" : "true",
            "gui.order" : "",
            "consent.screen.text" : ""
          },
          "protocolMappers" : [ {
            "id" : "8f7ab7d2-8d4c-447c-967f-eda5719f884a",
            "name" : "defaultpolicy",
            "protocol" : "openid-connect",
            "protocolMapper" : "oidc-hardcoded-claim-mapper",
            "consentRequired" : false,
            "config" : {
              "introspection.token.claim" : "true",
              "claim.value" : "readonly",
              "userinfo.token.claim" : "true",
              "id.token.claim" : "true",
              "lightweight.claim" : "true",
              "access.token.claim" : "true",
              "claim.name" : "policy",
              "jsonType.label" : "String",
              "access.tokenResponse.claim" : "false"
            }
          }, {
            "id" : "36858256-392e-47af-b08e-94de48987f20",
            "name" : "policymapper",
            "protocol" : "openid-connect",
            "protocolMapper" : "oidc-usermodel-attribute-mapper",
            "consentRequired" : false,
            "config" : {
              "introspection.token.claim" : "true",
              "userinfo.token.claim" : "true",
              "user.attribute" : "policy",
              "id.token.claim" : "true",
              "lightweight.claim" : "true",
              "access.token.claim" : "true",
              "claim.name" : "policy",
              "jsonType.label" : "String"
              }
            }
          ]
        },
        {
          "id": "10ee4aa3-df8d-40b5-87e5-adf7721e226b",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${phoneScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "2719773b-a6b8-4d8a-9610-39ded0a2b1a3",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "3471af29-23a9-440f-b84a-c9171094f8fa",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "b7dae6ff-f521-4381-83d5-7bcf2291fe70",
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "a25ea202-37ef-42b1-92b8-4b8091269259",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "198bd7af-34c0-45bf-9c36-7be521db7433",
          "name": "saml_organization",
          "description": "Organization Membership",
          "protocol": "saml",
          "attributes": {
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "85444170-331f-44ed-9457-78307286a5e2",
              "name": "organization",
              "protocol": "saml",
              "protocolMapper": "saml-organization-membership-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "1bbef110-8516-4aef-b242-982045b368c5",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "consent.screen.text": "${rolesScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "f82756ef-b3fc-4966-bbd3-62f99933c378",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "83358502-7630-406e-b8df-e3969820aece",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            },
            {
              "id": "41dcb368-1dc6-4ce1-841e-33df09f3ad92",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            }
          ]
        },
        {
          "id": "7472fa10-156c-4a35-aeb8-90dca76c0350",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "consent.screen.text": "",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "6be670a0-0528-4431-83d3-98e98a64b5a3",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "53767f57-5c0b-46b8-a491-fc8487f099a8",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${emailScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "d2aaf0f7-7f3b-4d35-aa32-04cd260e9bd5",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4dcb04d7-02d1-4726-bcb4-c8525eaebe17",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        },
        {
          "id": "6483d918-114d-40cc-9622-2ab73d2b2a34",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${addressScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "7291c0b9-a148-4531-abf2-a13aaff0788b",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "introspection.token.claim": "true",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "1269a367-9ced-4918-a0f5-488b0764722f",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "5d1d4354-da4f-4a34-89e0-f905306e5015",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            },
            {
              "id": "28ae4bf0-f02a-433a-8ce1-3db2ecc3d185",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "763fe45d-a6ef-46e1-9dac-9afd3d102e6b",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "ff435578-ba17-4cbd-acab-de085445284e",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "b101a975-af26-42c4-bc8c-560eb6ae5f6e",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "b734e589-e875-4185-a92e-406da0939cbb",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${profileScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "3d63312f-2e1b-4902-9806-a377dcf13bcc",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "feb0c4a3-f28e-4281-803b-a3722d16dc27",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c554eadd-edc7-4f2c-a9d9-2066b3616501",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "91c59508-a7aa-4029-b6ea-80edf7c37093",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "903491ae-8a70-44b1-9438-afa9014e45a8",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "e23b08ea-c30d-45e0-a9d8-1e4f7bc79208",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "639aa22e-b293-475e-9d50-af7141ea1c8f",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "id": "a1a1069e-e2f1-4d38-aa72-90248746014e",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "62697e9e-7a3a-42b7-87fa-d4f29d6b367a",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "dd4a1bee-8ad7-403d-9b40-15c59b906638",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "77bb2386-2974-4efc-8e1c-2c2f0a92ec02",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long"
              }
            },
            {
              "id": "fe8208ca-187d-466f-a887-21486a5725aa",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "3cd18db8-298a-41ec-82d1-a682bb9c4d86",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "1ee11031-35f1-409a-a272-6e3b3cf51967",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "role_list",
        "saml_organization",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr",
        "basic",
        "groups",
        "policy"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt",
        "organization"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {
      },
      "eventsEnabled": false,
      "eventsListeners": [
        "jboss-logging"
      ],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "cf07fd55-7ecd-4617-9d64-de2bca78508b",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "saml-user-attribute-mapper",
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "saml-role-list-mapper",
                "oidc-usermodel-property-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-address-mapper",
                "saml-user-property-mapper"
              ]
            }
          },
          {
            "id": "e840b741-ecb3-478d-888c-b1a25bafba36",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "dc6cbb04-840a-49d1-807c-769465aefe86",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "1ca3aa11-644d-4df2-b83f-daee11dc8e6f",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          },
          {
            "id": "ee646904-cc9d-47d3-9b9f-e1d6dbf03704",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "157b7f00-79a7-4ee4-afbe-292335897521",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "af003abc-d414-4eb3-be59-a969c37ff0a4",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "saml-user-attribute-mapper",
                "oidc-full-name-mapper",
                "saml-role-list-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "saml-user-property-mapper",
                "oidc-usermodel-property-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-address-mapper"
              ]
            }
          },
          {
            "id": "a9a54c2a-d89d-4a1c-a953-4abc014bab75",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          }
        ],
        "org.keycloak.userprofile.UserProfileProvider": [
          {
            "id": "e62c4895-d9cd-4d77-bbdd-263ae038412a",
            "providerId": "declarative-user-profile",
            "subComponents": {},
            "config": {
              "kc.user.profile.config": [
                "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"person-name-prohibited-characters\":{},\"length\":{\"min\":\"2\",\"max\":\"64\"}},\"annotations\":{},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"person-name-prohibited-characters\":{},\"length\":{\"min\":\"2\",\"max\":\"64\"}},\"annotations\":{},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": []
      },
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "authenticationFlows": [
        {
          "id": "f6cb78bd-e8fa-46f3-b973-b6f422110a62",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0f14a76b-b7a0-4157-999d-a6afc3528b8d",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "008a99fa-caa4-420d-9f74-0b3818657d45",
          "alias": "Browser - Conditional Organization",
          "description": "Flow to determine if the organization identity-first login is to be used",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "organization",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "dba76db6-1cfa-4d63-9a7b-388172e1ef94",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "ffe01939-5668-4bff-a6f0-7df57cc63f5b",
          "alias": "First Broker Login - Conditional Organization",
          "description": "Flow to determine if the authenticator that adds organization members is to be used",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "idp-add-organization-member",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "333c3857-b46d-4049-8074-06779082db4f",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c818cfd4-913c-408d-b2e0-55e9e4e7956b",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "e0b310eb-1ee9-47f6-bb0c-73ab55b4d0c3",
          "alias": "Organization",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional Organization",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f9187130-f8d5-4312-a65f-cf42b32ae1b4",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "47107bfb-e5b3-457a-b040-3eb23cce444f",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c2207d03-10d4-4c64-a5fe-eb15232b9d6d",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "de322c06-1fc2-4b66-b185-ca17ffc1aa1b",
          "alias": "browser",
          "description": "Browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 26,
              "autheticatorFlow": true,
              "flowAlias": "Organization",
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "68fa904d-9d81-406b-b178-7f686d46f669",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "fa733d00-2247-4b9b-a9be-2c049454d0a2",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "fd444b10-9578-4d55-88ed-d905b5b91c39",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "a32f58ee-20e8-4c0e-b35c-650859749de5",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 50,
              "autheticatorFlow": true,
              "flowAlias": "First Broker Login - Conditional Organization",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "cd3295dd-3386-49bf-894d-68694cb5706a",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "d45af4b0-a12d-40c0-9c21-7b38a3eaec21",
          "alias": "registration",
          "description": "Registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "540e774a-7455-4aea-bede-0cf078399262",
          "alias": "registration form",
          "description": "Registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-terms-and-conditions",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 70,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "b24a6976-7d44-4f88-9c69-512faf093543",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "autheticatorFlow": true,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "fe47327d-c557-41bc-adaf-48cd64b75f99",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "c8a32845-6704-4904-9f93-0f94b0d59f04",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "7aecd2ed-8d5e-4056-8894-211ba9a382bf",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "TERMS_AND_CONDITIONS",
          "name": "Terms and Conditions",
          "providerId": "TERMS_AND_CONDITIONS",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "webauthn-register",
          "name": "Webauthn Register",
          "providerId": "webauthn-register",
          "enabled": true,
          "defaultAction": false,
          "priority": 70,
          "config": {}
        },
        {
          "alias": "webauthn-register-passwordless",
          "name": "Webauthn Register Passwordless",
          "providerId": "webauthn-register-passwordless",
          "enabled": true,
          "defaultAction": false,
          "priority": 80,
          "config": {}
        },
        {
          "alias": "VERIFY_PROFILE",
          "name": "Verify Profile",
          "providerId": "VERIFY_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 90,
          "config": {}
        },
        {
          "alias": "delete_credential",
          "name": "Delete Credential",
          "providerId": "delete_credential",
          "enabled": true,
          "defaultAction": false,
          "priority": 100,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "firstBrokerLoginFlow": "first broker login",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DevicePollingInterval": "5",
        "clientOfflineSessionMaxLifespan": "0",
        "clientSessionIdleTimeout": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "600",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "frontendUrl": "",
        "organizationsEnabled": "true",
        "acr.loa.map": "{}"
      },
      "keycloakVersion": "26.0.0",
      "userManagedAccessAllowed": false,
      "organizationsEnabled": true,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    }
kind: ConfigMap
metadata:
  name: keycloak-realm-templates-7kgh2hc6b2
  namespace: keycloak