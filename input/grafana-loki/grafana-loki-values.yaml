loki:
  commonConfig:
    replication_factor: 1
      # To be 1 at the moment to restart loki, connect grafana to loki.
      # Issue threads at
      # https://github.com/grafana/loki/issues/10537#issuecomment-1719102096,
      # https://github.com/grafana/helm-charts/issues/1539#issuecomment-1759903690
    ring:
      kvstore:
        store: "memberlist"
      heartbeat_timeout: "10m"
  auth_enabled: true
  tenants: ## promtail
    - name: ${TENANT_NAME_OCI1}
      password: ${TENANT_PW}
    - name: ${TENANT_NAME_OCI2}
      password: ${TENANT_PW}
    - name: ${TENANT_NAME_OCISILOGEN}
      password: ${TENANT_PW}
    - name: ${TENANT_NAME_OCIOPS}
      password: ${TENANT_PW}
  limits_config:
    index_gateway_shard_size: 1
    retention_period: 168h # Retation period configuration
    ingestion_rate_mb: 20
    ingestion_burst_size_mb: 30
    query_timeout: 120s
  ingester:
    autoforget_unhealthy: true
    chunk_encoding: snappy

  schemaConfig: 
    configs: 
      - from: "2024-01-01"
        index:
          period: 24h
          prefix: index_
        object_store: s3
        schema: v13
        store: tsdb
  storage:
    bucketNames:
      chunks: chunks
      ruler: ruler
  storage_config:
    tsdb_shipper:
      active_index_directory: /var/loki/data/tsdb-index
      cache_location: /var/loki/data/tsdb-cache
    aws:
      endpoint: http://minio.minio-tenant-default.svc.cluster.local:80
      access_key_id: ${API_ACCESS_KEY}
      secret_access_key: ${API_SECRET_KEY}
      bucketnames: cluster-forge-loki
      s3forcepathstyle: true
      insecure: true
      http_config:
        insecure_skip_verify: true

  compactor: # Compactor configuration for retention
    working_directory: /var/loki/data/retention
    compaction_interval: 10m
    retention_enabled: true
    retention_delete_delay: 2h
    retention_delete_worker_count: 150
    delete_request_store: s3 ##<---test. This is needed

  server:
    http_server_write_timeout: 120s
    http_server_read_timeout: 120s
    grpc_server_max_recv_msg_size: 104857600  # 100 Mb
    grpc_server_max_send_msg_size: 104857600  # 100 Mb
  ingester_client:
    grpc_client_config:
      max_recv_msg_size: 104857600  # 100 Mb
      max_send_msg_size: 104857600  # 100 Mb

memberlist:
  service:
    publishNotReadyAddresses: true

test:
  enabled: false # Off helm test

lokiCanary:
  enabled: false # Off loki canary

gateway:
  enabled: true
  replicas: 1
  nginxConfig: ## For RKE clusters
    resolver: rke2-coredns-rke2-coredns.kube-system.svc.cluster.local

sidecar:
  rules:
    enabled: true
    logLevel: debug

chunksCache:
  enabled: true
resultsCache:
  enabled: true

extraObjects:
  - apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: loki-minio-creds
      namespace: grafana-loki
    spec:
      refreshInterval: "30m"
      secretStoreRef:
        name: minio-secret-store
        kind: ClusterSecretStore
      target:
        name: loki-minio-creds
      data:
        - secretKey: API_ACCESS_KEY
          remoteRef:
            key: default-user
            property: API_ACCESS_KEY
        - secretKey: API_SECRET_KEY
          remoteRef:
            key: default-user
            property: API_SECRET_KEY

  - apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: loki-tenant-creds
      namespace: grafana-loki
    spec:
      refreshInterval: "0"
      secretStoreRef:
        name: k8s-secret-store
        kind: ClusterSecretStore
      target:
        name: loki-tenant-creds
      data:
        - secretKey: loki_tenant_name_oci1
          remoteRef:
            key: grafana-loki-creds
            property: loki_tenant_name_oci1
        - secretKey: loki_tenant_name_oci2
          remoteRef:
            key: grafana-loki-creds
            property: loki_tenant_name_oci2
        - secretKey: loki_tenant_name_ocisilogen
          remoteRef:
            key: grafana-loki-creds
            property: loki_tenant_name_ocisilogen
        - secretKey: loki_tenant_name_ociops
          remoteRef:
            key: grafana-loki-creds
            property: loki_tenant_name_ociops
        - secretKey: loki_tenant_password_ociclusters
          remoteRef:
            key: grafana-loki-creds
            property: loki_tenant_password_ociclusters
backend:
  persistence:
    storageClass: longhorn-default
  extraArgs:
    - '-config.expand-env=true'
  extraEnv:
    - name: API_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: loki-minio-creds
          key: API_ACCESS_KEY
    - name: API_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: loki-minio-creds
          key: API_SECRET_KEY
    - name: TENANT_NAME_OCI1
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_oci1
    - name: TENANT_NAME_OCI2
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_oci2
    - name: TENANT_NAME_OCISILOGEN
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_ocisilogen
    - name: TENANT_NAME_OCIOPS
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_ociops
    - name: TENANT_PW
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_password_ociclusters
write:
  persistence:
    storageClass: longhorn-default
  extraArgs:
    - '-config.expand-env=true'
  extraEnv:
    - name: API_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: loki-minio-creds
          key: API_ACCESS_KEY
    - name: API_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: loki-minio-creds
          key: API_SECRET_KEY
    - name: TENANT_NAME_OCI1
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_oci1
    - name: TENANT_NAME_OCI2
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_oci2
    - name: TENANT_NAME_OCISILOGEN
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_ocisilogen
    - name: TENANT_NAME_OCIOPS
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_ociops
    - name: TENANT_PW
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_password_ociclusters
read:
  persistence:
    storageClass: longhorn-default
  extraArgs:
    - '-config.expand-env=true'
  extraEnv:
    - name: API_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: loki-minio-creds
          key: API_ACCESS_KEY
    - name: API_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: loki-minio-creds
          key: API_SECRET_KEY
    - name: TENANT_NAME_OCI1
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_oci1
    - name: TENANT_NAME_OCI2
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_oci2
    - name: TENANT_NAME_OCISILOGEN
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_ocisilogen
    - name: TENANT_NAME_OCIOPS
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_name_ociops
    - name: TENANT_PW
      valueFrom:
        secretKeyRef:
          name: loki-tenant-creds
          key: loki_tenant_password_ociclusters
minio:
  enabled: false
