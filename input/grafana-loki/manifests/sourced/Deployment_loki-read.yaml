---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: read
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 3.1.1
  name: loki-read
  namespace: grafana-loki
spec:
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: read
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: dbb440eae4bc22dc6ba70cea6930e5ba6eb2321b301104648789f9ae5b15be0a
      labels:
        app.kubernetes.io/component: read
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: read
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=read
            - -legacy-read-mode=false
            - -common.compactor-grpc-address=loki-backend.grafana-loki.svc.cluster.local:9095
            - -config.expand-env=true
          env:
            - name: API_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: API_ACCESS_KEY
                  name: loki-minio-creds
            - name: API_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: API_SECRET_KEY
                  name: loki-minio-creds
            - name: TENANT_NAME_OCI1
              valueFrom:
                secretKeyRef:
                  key: loki_tenant_name_oci1
                  name: loki-tenant-creds
            - name: TENANT_NAME_OCI2
              valueFrom:
                secretKeyRef:
                  key: loki_tenant_name_oci2
                  name: loki-tenant-creds
            - name: TENANT_NAME_OCISILOGEN
              valueFrom:
                secretKeyRef:
                  key: loki_tenant_name_ocisilogen
                  name: loki-tenant-creds
            - name: TENANT_NAME_OCIOPS
              valueFrom:
                secretKeyRef:
                  key: loki_tenant_name_ociops
                  name: loki-tenant-creds
            - name: TENANT_PW
              valueFrom:
                secretKeyRef:
                  key: loki_tenant_password_ociclusters
                  name: loki-tenant-creds
          image: docker.io/grafana/loki:3.1.1
          imagePullPolicy: IfNotPresent
          name: loki
          ports:
            - containerPort: 3100
              name: http-metrics
              protocol: TCP
            - containerPort: 9095
              name: grpc
              protocol: TCP
            - containerPort: 7946
              name: http-memberlist
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 30
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/loki/config
              name: config
            - mountPath: /etc/loki/runtime-config
              name: runtime-config
            - mountPath: /tmp
              name: tmp
            - mountPath: /var/loki
              name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: data
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: loki
          name: config
        - configMap:
            name: loki-runtime
          name: runtime-config
