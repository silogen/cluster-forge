---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/enforce: privileged
  name: otel-lgtm-stack
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tempo-pvc
  namespace: otel-lgtm-stack
spec:
  storageClassName: default 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-data-pvc
  namespace: otel-lgtm-stack
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-storage-pvc
  namespace: otel-lgtm-stack
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: otel-lgtm-stack
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: p8s-pvc
  namespace: otel-lgtm-stack
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
# Source: grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-sidecar
  namespace: otel-lgtm-stack
---
# Source: grafana/templates/configmap-dashboard-provider.yaml ######
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
  name: grafana-config-dashboards
  namespace: otel-lgtm-stack
data:
  provider.yaml: |-
    apiVersion: 1
    providers:
      - name: 'sidecarProvider'
        orgId: 1
        type: file
        disableDeletion: false
        allowUiUpdates: false
        updateIntervalSeconds: 30
        options:
          foldersFromFilesStructure: true
          path: /tmp/dashboards
---
# Source: grafana/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: grafana-sidecar-clusterrole
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps", "secrets"]
    verbs: ["get", "watch", "list"]
---
# Source: grafana/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: grafana-clusterrolebinding
subjects:
  - kind: ServiceAccount
    name: grafana-sidecar
    namespace: otel-lgtm-stack
roleRef:
  kind: ClusterRole
  name: grafana-sidecar-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# this is intended for demo / testing purposes only, not for production usage
apiVersion: v1
kind: Service
metadata:
  name: lgtm-stack
  namespace: otel-lgtm-stack
spec:
  selector:
    app: lgtm
  ports:
    - name: grafana
      protocol: TCP
      port: 3000
      targetPort: 3000
    - name: otel-grpc
      protocol: TCP
      port: 4317
      targetPort: 4317
    - name: otel-http
      protocol: TCP
      port: 4318
      targetPort: 4318
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lgtm
  namespace: otel-lgtm-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lgtm
  template:
    metadata:
      labels:
        app: lgtm
    spec:
      serviceAccountName: grafana-sidecar
      automountServiceAccountToken: true
      containers:
        - name: grafana-sc-dashboard
          image: "quay.io/kiwigrid/k8s-sidecar:1.27.4"
          imagePullPolicy: IfNotPresent
          env:
            - name: METHOD
              value: WATCH
            - name: LABEL
              value: "grafana_dashboard"
            - name: FOLDER
              value: "/tmp/dashboards" ##
            - name: RESOURCE
              value: "both"
            - name: FOLDER_ANNOTATION
              value: "grafana_folder"
            - name: REQ_USERNAME
              value: admin
            - name: REQ_PASSWORD
              value: admin
            - name: REQ_URL
              value: http://localhost:3000/api/admin/provisioning/dashboards/reload
            - name: REQ_METHOD
              value: POST
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts: ##
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
        - name: lgtm
          image: grafana/otel-lgtm:latest
          ports:
            - containerPort: 3000
            - containerPort: 4317
            - containerPort: 4318
          readinessProbe:
            exec:
              command:
                - cat
                - /tmp/ready
          # NOTE: By default OpenShift does not allow writing the root directory.
          # Thats why the data dirs for grafana, prometheus and loki can not be
          # created and the pod never becomes ready.
          # See: https://github.com/grafana/docker-otel-lgtm/issues/132
          volumeMounts:
            - name: tempo-data
              mountPath: /data/tempo
            - name: grafana-data
              mountPath: /data/grafana
            - name: loki-data
              mountPath: /data/loki
            - name: loki-storage
              mountPath: /loki
            - name: p8s-storage
              mountPath: /data/prometheus
            - name: sc-dashboard-volume ##
              mountPath: "/tmp/dashboards"
            - name: sc-dashboard-provider ##
              mountPath: "/otel-lgtm/grafana/conf/provisioning/dashboards/sc-dashboardproviders.yaml"
              subPath: provider.yaml
      volumes:
        - name: tempo-data
          persistentVolumeClaim:
            claimName: tempo-pvc
        - name: loki-data
          persistentVolumeClaim:
            claimName: loki-data-pvc
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: loki-storage
          persistentVolumeClaim:
            claimName: loki-storage-pvc
        - name: p8s-storage
          persistentVolumeClaim:
            claimName: p8s-pvc
        - name: sc-dashboard-volume ##
          emptyDir:
            {}
        - name: sc-dashboard-provider ##
          configMap:
            name: grafana-config-dashboards
