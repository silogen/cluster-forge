apiVersion: batch/v1
kind: Job
metadata:
  name: airm-secret-generator-openbao
  namespace: openbao
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - args:
          - while true;
            do
              bao status;
              retVal=$?;
              if [ $retVal -ne 1 ]; then
                break;
              fi;
              sleep 1;
            done;
            BAO_ROOT_TOKEN=$(jq -r '.root_token' /etc/openbao-keys/bao-keys.json);
            bao login $BAO_ROOT_TOKEN;
            bao kv put airm/loki_tenant_name_oci1 value=loki_tenant_oci1;
            bao kv put airm/loki_tenant_name_oci2 value=loki_tenant_oci2;
            bao kv put airm/loki_tenant_name_ocisilogen value=loki_tenant_ocisilogen;
            bao kv put airm/loki_tenant_name_ociops value=loki_tenant_ociops;
            bao kv put airm/loki_tenant_password_ociclusters value=loki_tenant_password_ociclusters;
            bao kv put airm/.htpasswd value="cluster-forge-mimir-test-user:\$apr1\$mszGHRfu\$fDCiA32oRdtP8tXGTTn2M0";
            bao kv put airm/grafana-admin-id value=admin;
            bao kv put airm/grafana-admin-pw value=password;
            bao kv put airm/airm-ui-keycloak-secret value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-keycloak-admin-client-id value=admin-client-id-value;
            bao kv put airm/airm-keycloak-admin-client-secret value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-ci-client-secret value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-airm-cnpg-user value=airm-airm-cnpg-user;
            bao kv put airm/catalog-cnpg-superuser value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/catalog-cnpg-user value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/catalog-cnpg-user-username value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/chat-legacy-auth-nextauth-secret value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/docker-pull-k8s-external-secret value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/keycloak-client-frontend-keycloak-secret value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/keycloak-credentials value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/silogen-realm-credentials value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-realm-credentials value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/keycloak-client-internal-keycloak-id value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/keycloak-client-internal-keycloak-secret value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/keycloak-client-ci-keycloak-secret value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/keycloak-initial-admin-password value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/keycloak-cnpg-user-username value=keycloak;
            bao kv put airm/keycloak-cnpg-superuser-username value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-cnpg-superuser-username value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-cnpg-user-username value=airm_user;
            bao kv put airm/airm-rabbitmq-user-username value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-oci-1-rabbitmq-common-vhost-username value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-rabbitmq-backup-minio-credentials value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/keycloak-cnpg-superuser-password value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/keycloak-cnpg-user-password value=keycloak;
            bao kv put airm/keycloak_initial_admin_password value=admin;
            bao kv put airm/airm-cnpg-superuser-password value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-cnpg-user-password value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-rabbitmq-user-password value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-oci-1-rabbitmq-common-vhost-password value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/hmac-keys-access-key value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/hmac-keys-secret-key value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/docker-pull-k8s-external-secret value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/airm-legacy-auth-nextauth-secret value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";
            bao kv put airm/rabbitmq-default-user-username value=username;
            bao kv put airm/rabbitmq-default-user-password value="$(bao write -field=random_bytes sys/tools/random bytes=32 format=hex)";

          command:
            - /bin/sh
            - -c
          env:
            - name: BAO_ADDR
              value: http://openbao-internal:8200
            - name: BAO_API_ADDR
              value: http://openbao-internal:8200
            - name: BAO_CLUSTER_ADDR
              value: http://openbao-internal:8201
          image: ghcr.io/silogen/cluster-tool:latest
          imagePullPolicy: Always
          name: openbao-unseal
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
          - name: openbao-keys
            mountPath: /etc/openbao-keys
            readOnly: true
      serviceAccountName: openbao
      volumes:
      - name: openbao-keys
        secret:
          secretName: openbao-keys
