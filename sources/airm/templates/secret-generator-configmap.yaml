---
apiVersion: v1
kind: ConfigMap
metadata:
  name: '{{ .Release.Name }}-secret-generator-script'
  annotations:
    helm.sh/hook: pre-install
  namespace: '{{ .Release.Namespace }}'
data:
  generate-secrets.sh: |
    #!/bin/bash
    set -e
    
    # Generate alphanumeric secret function
    generate_secret() {
        openssl rand -hex 16 | tr 'a-f' 'A-F' | head -c 32
    }
    
    # Generate all secrets first
    AIRM_SUPERUSER_USERNAME=$(generate_secret)
    AIRM_SUPERUSER_PASSWORD=$(generate_secret)
    AIRM_USER_PASSWORD=$(generate_secret)
    AIRM_RABBITMQ_USERNAME=$(generate_secret)
    AIRM_RABBITMQ_PASSWORD=$(generate_secret)
    HMAC_ACCESS_KEY=$(generate_secret)
    HMAC_SECRET_KEY=$(generate_secret)
    AIRM_LEGACY_AUTH=$(generate_secret)
    AIRM_UI_SECRET=$(generate_secret)
    
    # Create the ClusterSecretStore YAML with pre-generated secrets
    cat > /tmp/final-secret-store.yaml << EOF
    apiVersion: external-secrets.io/v1beta1
    kind: ClusterSecretStore
    metadata:
      name: airm-secret-store
    spec:
      provider:
        fake:
          data:
          - key: airm-cnpg-superuser-username
            value: ${AIRM_SUPERUSER_USERNAME}
          - key: airm-cnpg-superuser-password
            value: ${AIRM_SUPERUSER_PASSWORD}
          - key: airm-cnpg-user-username
            value: airm_user
          - key: airm-cnpg-user-password
            value: ${AIRM_USER_PASSWORD}
          - key: airm-rabbitmq-user-username
            value: ${AIRM_RABBITMQ_USERNAME}
          - key: airm-rabbitmq-user-password
            value: ${AIRM_RABBITMQ_PASSWORD}
          - key: hmac-keys-access-key
            value: ${HMAC_ACCESS_KEY}
          - key: hmac-keys-secret-key
            value: ${HMAC_SECRET_KEY}
          - key: airm-legacy-auth-nextauth-secret
            value: ${AIRM_LEGACY_AUTH}
          - key: airm-ui-keycloak-secret
            value: ${AIRM_UI_SECRET}
    EOF


    # do not apply if the secret store already exists
    if kubectl get clustersecretstores.external-secrets.io airm-secret-store >/dev/null 2>&1; then
      echo "ClusterSecretStore 'airm-secret-store' already exists, skipping creation."
      exit 0
    fi

    echo "ClusterSecretStore does not exist, creating it..."
    kubectl apply -f /tmp/final-secret-store.yaml
    echo "ClusterSecretStore 'airm-secret-store' created successfully!"

    echo "Generated secrets with alphanumeric values only"
    exit 0
