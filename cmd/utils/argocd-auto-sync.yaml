apiVersion: batch/v1
kind: CronJob
metadata:
  name: argocd-auto-sync
  namespace: argocd
spec:
  schedule: "*/5 * * * *" # every 5 minutes
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: argocd-sync
            image: argoproj/argocd:latest
            command:
            - /bin/sh
            - -c
            - |
              #!/bin/sh
              set -e
              export ARGOCD_SERVER=argocd-server.argocd.svc.cluster.local:443
              export ARGOCD_OPTS="--insecure"
              # Login (replace with your method: token or admin password)
              # get the secrets from kubernetes secrets
              ARGOCD_ADMIN_PASSWORD=$(kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath='{.data.password}' | base64 --decode)
              if [ -z "$ARGOCD_ADMIN_PASSWORD" ]; then
                echo "Error: ARGOCD_ADMIN_PASSWORD is empty. Ensure the argocd-initial-admin-secret exists."
                exit 1
              fi
              argocd login $ARGOCD_SERVER $ARGOCD_OPTS --username admin --password $ARGOCD_ADMIN_PASSWORD
              # List all apps
              for app in $(argocd app list -o name); do
                status=$(argocd app get $app -o json | jq -r '.status.sync.status')
                health=$(argocd app get $app -o json | jq -r '.status.health.status')
                if [ "$status" != "Synced" ] || [ "$health" != "Healthy" ]; then
                  echo "Syncing $app (status=$status, health=$health)"
                  argocd app sync $app
                fi
              done
            env:
            - name: ARGOCD_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: argocd-initial-admin-secret
                  key: password
          restartPolicy: OnFailure